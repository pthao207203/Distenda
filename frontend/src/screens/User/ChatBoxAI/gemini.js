import { GoogleGenAI } from "@google/genai";

// L·∫•y API Key t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;

const ai = new GoogleGenAI({
  apiKey: API_KEY,
});

const model = "gemini-2.0-flash-thinking-exp-01-21";

export async function getGeminiReply(prompt, user) {
  const config = {
    responseMimeType: "text/plain",
  };

  const userContext = user
    ? `Th√¥ng tin ng∆∞·ªùi d√πng:\n- T√™n: ${user.UserFullName}\n- Email: ${user.UserEmail}\n- S·ªë ti·ªÅn: ${user.UserMoney} VNƒê\n\n`
    : "";
  console.log("üß† Prompt g·ª≠i t·ªõi Gemini:");
  console.log(userContext + prompt); // üëà d√≤ng n√†y s·∫Ω gi√∫p debug k·ªπ h∆°n

  const contents = [
    {
      role: "user",
      parts: [
        {
          text: `${userContext}${prompt}`,
        },
      ],
    },
  ];

  try {
    const response = await ai.models.generateContentStream({
      model,
      config,
      contents,
    });

    let fullResponse = "";
    for await (const chunk of response) {
      fullResponse += chunk.text;
    }

    return fullResponse;
  } catch (error) {
    console.error("Gemini API Error:", error);
    return "‚ö†Ô∏è C√≥ l·ªói khi k·∫øt n·ªëi ƒë·∫øn Gemini AI.";
  }
}
